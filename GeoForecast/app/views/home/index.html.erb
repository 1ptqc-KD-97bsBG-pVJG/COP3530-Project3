<div class="container mt-5">
  <h1 class="text-center mb-4">GeoForecast</h1>

  <%= form_with(url: search_path, method: :get, local: true, class: "row g-3") do |form| %>
    <div class="col-md-3">
      <%= form.label :latitude, 'Latitude:', class: "form-label" %>
      <%= form.number_field :latitude, step: :any, required: true, placeholder: "Enter latitude", class: "form-control" %>
    </div>

    <div class="col-md-3">
      <%= form.label :longitude, 'Longitude:', class: "form-label" %>
      <%= form.number_field :longitude, step: :any, required: true, placeholder: "Enter longitude", class: "form-control" %>
    </div>

    <div class="col-md-3">
      <%= form.label :initial_search_radius, 'Initial Search Radius (meters):', class: "form-label" %>
      <%= form.number_field :initial_search_radius, placeholder: "Enter initial search radius", class: "form-control" %>
    </div>

    <div class="col-md-3">
      <%= form.label :date, 'Date:', class: "form-label" %>
      <%= form.date_field :date, value: Time.now.strftime("%Y-%m-%d"), class: "form-control" %>
    </div>

    <div class="col-md-3">
      <%= form.label :time, 'Time:', class: "form-label" %>
      <%= form.time_field :time, value: Time.now.strftime("%H:%M"), class: "form-control"%>
    </div>

    <div class="col-md-auto">
      <label class="form-label">Sort Method:</label><br>
      <%= form.check_box :sort_heap, id: 'sort_heap' %>
      <%= form.label :sort_heap, 'Heap Sort', class: "form-check-label" %><br>
      <%= form.check_box :sort_merge, id: 'sort_merge' %>
      <%= form.label :sort_merge, 'Merge Sort', class: "form-check-label" %>
    </div>

    <div class="col-md-3">
      <label class="form-label">Extras:</label><br>
      <%= form.check_box :developer%>
      <%= form.label :developer?, 'Developer?', class: "form-check-label" %><br>
    </div>


    <div class="text-center">
      <%= form.submit 'Get Forecast', class: "btn btn-primary mt-3" %>
    </div>
  <% end %>

  <div class="text-center mt-5">
    <div id="map" style="height: 500px;"></div>
  </div>
</div>

<script>
    // Javascript for map
    document.addEventListener('DOMContentLoaded', function() {
      // Ensure at least one sort method is selected
      const sortHeap = document.getElementById('sort_heap');
      const sortMerge = document.getElementById('sort_merge');

      function validateSortSelection() {
        if (!sortHeap.checked && !sortMerge.checked) {
          sortHeap.checked = true; // Default to Heap sort if none is selected
        }
      }

    document.querySelector('form').addEventListener('submit', validateSortSelection);


      var map = L.map('map').setView([37.8, -96], 4);  // Center on the US at a zoom level showing most of the country

      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: 'Â© OpenStreetMap'
      }).addTo(map);

      var marker;  // Define a variable for the marker

      function addOrUpdateMarker(lat, lng) {
        if (marker) {
          marker.setLatLng([lat, lng]); // If marker exists, update its position
        } else {
          marker = L.marker([lat, lng]).addTo(map); // Otherwise, create a new marker
        }
      }

      function onMapClick(e) {
        var latitude = e.latlng.lat;
        var longitude = e.latlng.lng;
        document.querySelector('[name="latitude"]').value = latitude.toFixed(5);
        document.querySelector('[name="longitude"]').value = longitude.toFixed(5);
        addOrUpdateMarker(latitude, longitude);
      }

      map.on('click', onMapClick);

      // Listen for changes in the latitude and longitude input fields
      document.querySelector('[name="latitude"]').addEventListener('change', function() {
        updateMarkerFromInputs();
      });
      document.querySelector('[name="longitude"]').addEventListener('change', function() {
        updateMarkerFromInputs();
      });

      function updateMarkerFromInputs() {
        var lat = parseFloat(document.querySelector('[name="latitude"]').value);
        var lng = parseFloat(document.querySelector('[name="longitude"]').value);
        if (!isNaN(lat) && !isNaN(lng)) {
          map.panTo([lat, lng]);
          addOrUpdateMarker(lat, lng);
        }
      }
    });
  </script>
</div>

